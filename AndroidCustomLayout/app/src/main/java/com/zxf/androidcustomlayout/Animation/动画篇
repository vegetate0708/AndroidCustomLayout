Android的animation由四种类型组成：alpha、scale、translate、rotate，对应android官方文档地址：《Animation Resources》
1、XML配置文件中
   alpha     渐变透明度动画效果
   scale     渐变尺寸伸缩动画效果
   translate 画面转换位置移动动画效果
   rotate    画面转移旋转动画效果
2、动作文件存放位置
   动作定义文件应该存放在res/anim文件夹下，访问时采用R.anim.XXX.xml的方式
二、scale标签——调节尺寸
1、自有属性
  scale标签是缩放动画，可以实现动态调控件尺寸的效果，有下面几个属性：
    android:fromXScale    起始的X方向上相对自身的缩放比例，浮点值，比如1.0代表自身无变化，0.5代表起始时缩小一倍，2.0代表放大一倍；
    android:toXScale      结尾的X方向上相对自身的缩放比例，浮点值；
    android:fromYScale    起始的Y方向上相对自身的缩放比例，浮点值，
    android:toYScale      结尾的Y方向上相对自身的缩放比例，浮点值；
    android:pivotX        缩放起点X轴坐标，可以是数值、百分数、百分数p 三种样式，
                          比如 50、50%、50%p，当为数值时，表示在当前View的左上角，
                          即原点处加上50px，做为起始缩放点；如果是50%，
                          表示在当前控件的左上角加上自己宽度的50%做为起始点；
                          如果是50%p，那么就是表示在当前的左上角加上父控件宽度的50%做为起始点x轴坐标。
    android:pivotY        缩放起点Y轴坐标，取值及意义跟android:pivotX一样。
2：Animation类是所有动画（scale、alpha、translate、rotate）的基类，
  这里以scale标签为例，讲解一下，Animation类所具有的属性及意义。
  android:duration      动画持续时间，以毫秒为单位
  android:fillAfter     如果设置为true，控件动画结束时，将保持动画最后时的状态
  android:fillBefore    如果设置为true,控件动画结束时，还原到开始动画前的状态
  android:fillEnabled   与android:fillBefore 效果相同，都是在动画结束时，将控件还原到初始化状态
  android:repeatCount   重复次数
  android:repeatMode	重复类型，有reverse和restart两个值，reverse表示倒序回放，restart表示重新放一遍，必须与repeatCount一起使用才能看到效果。因为这里的意义是重复的类型，即回放时的动作。
  android:interpolator  设定插值器，其实就是指定的动作效果，比如弹跳效果等，不在这小节中讲解，后面会单独列出一单讲解。
  对于android:duration，就不再讲解了，就是动画的持续时长，以毫秒为单位，下面看看android:fillAfter和android:fillBefore
三、alpha标签——调节透明度
1、自身属性
   android:fromAlpha   动画开始的透明度，从0.0 --1.0 ，0.0表示全透明，1.0表示完全不透明
   android:toAlpha     动画结束时的透明度，也是从0.0 --1.0 ，0.0表示全透明，1.0表示完全不透明
2、从Animation类继承的属性
   android:duration       动画持续时间，以毫秒为单位
   android:fillAfter      如果设置为true，控件动画结束时，将保持动画最后时的状态
   android:fillBefore     如果设置为true,控件动画结束时，还原到开始动画前的状态
   android:fillEnabled    与android:fillBefore 效果相同，都是在动画结束时，将控件还原到初始化状态
   android:repeatCount    重复次数
   android:repeatMode	  重复类型，有reverse和restart两个值，reverse表示倒序回放，restart表示重新放一遍，必须与repeatCount一起使用才能看到效果。因为这里的意义是重复的类型，即回放时的动作。
   android:interpolator   设定插值器，其实就是指定的动作效果，比如弹跳效果等，不在这小节中讲解，后面会单独列出一单讲解。
四、rotate标签——旋转
   1、自身属性
   android:fromDegrees     开始旋转的角度位置，正值代表顺时针方向度数，负值代码逆时针方向度数
   android:toDegrees       结束时旋转到的角度位置，正值代表顺时针方向度数，负值代码逆时针方向度数
   android:pivotX          缩放起点X轴坐标，可以是数值、百分数、百分数p 三种样式，比如 50、50%、50%p，具体意义已在scale标签中讲述，这里就不再重讲
   android:pivotY          缩放起点Y轴坐标，可以是数值、百分数、百分数p 三种样式，比如 50、50%、50%p
2、从Animation类继承的属性
   android:duration        动画持续时间，以毫秒为单位
   android:fillAfter       如果设置为true，控件动画结束时，将保持动画最后时的状态
   android:fillBefore      如果设置为true,控件动画结束时，还原到开始动画前的状态
   android:fillEnabled     与android:fillBefore 效果相同，都是在动画结束时，将控件还原到初始化状态
   android:repeatCount     重复次数
   android:repeatMode	   重复类型，有reverse和restart两个值，reverse表示倒序回放，restart表示重新放一遍，必须与repeatCount一起使用才能看到效果。因为这里的意义是重复的类型，即回放时的动作。
   android:interpolator    设定插值器，其实就是指定的动作效果，比如弹跳效果等，不在这小节中讲解，后面会单独列出一单讲解。
五、translate标签 —— 平移
1、自身属性
  android:fromXDelta       起始点X轴坐标，可以是数值、百分数、百分数p 三种样式，比如 50、50%、50%p，具体意义已在scale标签中讲述，这里就不再重讲
  android:fromYDelta       起始点Y轴从标，可以是数值、百分数、百分数p 三种样式；
  android:toXDelta         结束点X轴坐标
  android:toYDelta         结束点Y轴坐标
2、从Animation类继承的属性
  android:duration         动画持续时间，以毫秒为单位
  android:fillAfter        如果设置为true，控件动画结束时，将保持动画最后时的状态
  android:fillBefore       如果设置为true,控件动画结束时，还原到开始动画前的状态
  android:fillEnabled      与android:fillBefore 效果相同，都是在动画结束时，将控件还原到初始化状态
  android:repeatCount      重复次数
  android:repeatMode	   重复类型，有reverse和restart两个值，reverse表示倒序回放，restart表示重新放一遍，必须与repeatCount一起使用才能看到效果。因为这里的意义是重复的类型，即回放时的动作。
  android:interpolator     设定插值器，其实就是指定的动作效果，比如弹跳效果等，不在这小节中讲解，后面会单独列出一单讲解。
六、set标签——定义动作合集
  前面我们讲解了各个标签动画的意义及用法，但他们都是独立对控件起作用，
  假设我现在想上面的textView控件做一个动画——从小到大，旋转出场，
  而且透明度也要从0变成1，即下面的这个效果，该怎么办？
  这就需要对指定的控件定义动作合集，Set标签就可以将几个不同的动作定义成一个组；
  属性：
  set标签自已是没有属性的，他的属性都是从Animation继承而来
         ，但当它们用于Set标签时，就会对Set标签下的所有子控件都产生作用。
  属性有：（从Animation类继承的属性）
    android:duration       动画持续时间，以毫秒为单位
    android:fillAfter      如果设置为true，控件动画结束时，将保持动画最后时的状态
    android:fillBefore     如果设置为true,控件动画结束时，还原到开始动画前的状态
    android:fillEnabled    与android:fillBefore 效果相同，都是在动画结束时，将控件还原到初始化状态
    android:repeatCount    重复次数
    android:repeatMode	   重复类型，有reverse和restart两个值，reverse表示倒序回放，restart表示重新放一遍，必须与repeatCount一起使用才能看到效果。因为这里的意义是重复的类型，即回放时的动作。
    android:interpolator   设定插值器，其实就是指定的动作效果，比如弹跳效果等，不在这小节中讲解，后面会单独列出一单讲解

七、Interpolator属性是Animation类的一个XML属性，所以alpha、scale、rotate、translate、set都会继承得到这个属性。Interpolator被译为插值器，其实我不大能从字面上理解为什么会这样译，其实他是一个指定动画如何变化的东东，跟PS里的动作有点类似：随便拿来一张图片，应用一个动作，图片就会指定变化。
    Interpolator的系统值有下面几个：
    意义如下：
    AccelerateDecelerateInterpolator    在动画开始与介绍的地方速率改变比较慢，在中间的时候加速
    AccelerateInterpolator              在动画开始的地方速率改变比较慢，然后开始加速
    AnticipateInterpolator              开始的时候向后然后向前甩
    AnticipateOvershootInterpolator     开始的时候向后然后向前甩一定值后返回最后的值
    BounceInterpolator                  动画结束的时候弹起
    CycleInterpolator                   动画循环播放特定的次数，速率改变沿着正弦曲线
    DecelerateInterpolator              在动画开始的地方快然后慢
    LinearInterpolator                  以常量速率改变
    OvershootInterpolator               向前甩一定值后再回到原来位置